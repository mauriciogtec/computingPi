{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(ggplot2)\n\nshinyServer(function(input, output) {\n\n  \n  output$pointPlot <- renderPlot({\n    x.coord <- runif(input$nsim)\n    y.coord <- runif(input$nsim)\n    In <- (x.coord^2 + y.coord^2 <= 1)\n    points <- data.frame(x.coord, y.coord, In)\n    qplot(c(0,1), stat = \"function\", fun = function(x) sqrt(1-x^2), geom = \"line\") + # plot circle \n      geom_point(data = points, aes(x = x.coord, y = y.coord, colour = In, size = 2)) + # add points\n      coord_fixed() + xlab(\"\") + ylab(\"\") + theme(legend.position=\"none\") + # aspect ratio and details\n      ggtitle (\"Plotting the points inside and outside\") \n  })\n\n  output$estimations <- renderUI({\n    x.coord <- runif(input$nsim)\n    y.coord <- runif(input$nsim)\n    frac.inside <- sum(x.coord^2 + y.coord^2 <= 1)/input$nsim\n    HTML(paste(\"Fraction of points inside: <br><code>\", frac.inside, \"</code> <br>\",\n               \"Estimation of PI (4 times the above) <br><code>\", 4*frac.inside), \"</code>\")\n  })\n})\n",
    "created" : 1439337305893.000,
    "dirty" : false,
    "encoding" : "ISO-8859-1",
    "folds" : "",
    "hash" : "2958047703",
    "id" : "8E33D289",
    "lastKnownWriteTime" : 1439343531,
    "path" : "~/Dropbox/Cursos impartidos/Estad√≠stica-Computacional/ShinyExamples/ComputingPi/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}